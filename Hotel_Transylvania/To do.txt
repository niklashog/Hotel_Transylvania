### WORK ITEMS
-	RoomType måste vara Enum!
-	Kan bara delete guest om ingen reservation är aktiv.

-	När jag uppmanar att klicka Enter för att spara så vill jag även ge alternativet att
	klicka backspace för att "backa utan att spara".

-	Behöver jag verkligen IPaint när jag har IExecute??
-	Flytta CalendarNavigation och CalendarData till MenuNavigation & MenuExecution.
-	List<Guest> Guests i min Room Model?
-	Det går att önska 200 sängar.
-	Update room måste jag fixa UX
-	Se över using(-blocken nu när jag tagit bort dem och kör dbContext som parameter.

### CLEANUP
-	Städa bort isRunning från Execution och Navigation.
-	Felhantering.
-	Ändra så increment inte är automatisk på Room Number.


Console-Command
add-migration "Initial migration"


18/12-24
Jag har försökt fixa GuestService.  Eventuellt klar?!
Fortsätt med Room och sedan Reservation.


## KRAV
[•]	(C) Lägg till en ny entitet
[•]	(R) Se en list över de befintliga entiteter som finns i databasen
[•]	(U) Uppdatera en befintlig entitet
[•]	(D) Radera en befintlig entitet
		[•] Behöver ta bort bokning innan en gäst går att ta bort.

1:	(G) ER diagram ska ha alla entiteter som behövs för att hotellappen ska 
	fungera enligt appens beskrivning. 
2:	(G) Skapa MS-SQL syntaxer som kan utföra ’Select’, ’Where’, ’Order By’ uppgifter mot din databas.
3:	(VG) Beskriv i ett dokument vad du har gjort för att garantera att dina tabeller möter 3NF:s krav.
4:	(VG) Skapa MS-SQL syntaxer som kan utföra ’Joins’, ’Group By’ och minst en ’Subquery’ mot din databas

[]	Kommunikationen med databasen skall ske med Entity Framework Core. 
[]	Code First inclusive appsettings.json
[]	Databas i MS-SQL Server.


ROOM
[•]	Det skall gå att registrera ett rum och rummets uppgifter skall kunna ändras. 
[•]	Applikationen skall hantera ett antal rum. 
[•]	Ett rum ska kunna vara enkelrum eller dubbelrum.
[•]	För dubbelrum ska det finnas möjlighet till att sätta in extrasängar (1 eller 2 beroende på rummets storlek).

GUEST
[•]	Det skall gå att registrera en kund och kundens uppgifter skall kunna ändras. 
[•]	Seed minst 4 rum
[•]	Seed minst 4 gäster

RESERVATION
[]	Användaren måste välja datum då rummet ska bokas.
[]	Ett rum kan bokas av en kund för en eller flera nätter. 


Redovisning: Totalt finns det 5 saker som ska lämnas in:
1.[]	(G) ER Diagram över din database
2.[]	(VG) Ett dokument som beskriver hur du följt 3NF i dina tabeller
3.[]	(G) En .sql fil med dina SQL Select osv. syntaxer
4.[]	(VG) En .sql fil med dina SQL Join osv. syntaxer
5.[]	(G) En .NET Core console Hotell app




### LOG

2024-12-16 Denna är rätt.

2024.12.13
-	Skriver klar all CRUD för Rooms.
-	Lägger till Lista med Reservations på Guest. För jag tror att dit jag ska CRUDDA reservations.

2024-12-12
-	Lägger till Services för Guest, Reservation och Room.
-	Bryter ut menyklasserna för MainMenu, Guest, Reservation och Room från övriga menyklasser. 
	From nu kallar jag enbart dessa för mina menyer.
-	Döper om resterande "menyer" till Controllers, då det faktiskt är vad dem är.

-	Jobbet ovanför är lösningen för att ÄNTLIGEN få Create, Read och Delete för Guest att fungera mot FakeDb. 
-	Skriver metoden för att uppdatera en Guest. CRUD mot Guest är nu klar. Fucking magic.

2024-12-10, 2024-12-11, 
-	Refactoring till FakeDataBase (the struggles)

2024-12-03-2024-12-09
-	Bygger Create, Read, Delete mot vanlig lista.

2024-12-02
-	Ordnar klasser och interfaces för Reservations. Alla menyer fungerar nu.
-	Lägger in så bannern ligger kvar i alla menyer.
2024-11-30
-	Ordnar klasser och interfaces för Guests. Guests-menyn fungerar nu.
2024-11-29
-	Ordnar klasser och interfaces för Rooms. Rooms-menyn fungerar nu.
2024-11-25
-	Börjar skapa menyerna.
-	Många menyer har bara placeholder-rubriker som ej går att klicka sig in på.